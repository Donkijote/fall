name: Sync Release

on:
  workflow_run:
    workflows:
      - Release
    types:
      - completed

jobs:
  sync:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.x

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Install
        run: pnpm install

      - name: Determine version bump from PR label
        id: bump
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const prs = run.pull_requests || [];
            if (prs.length === 0) {
              core.setFailed('No pull request associated with this workflow_run.');
              return;
            }
            // If there are multiple, take the first; adapt if you need stricter matching.
            const prNumber = prs[0].number;

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const rel = pr.labels.find(l =>
              /^release\/(major|minor|patch)$/.test(l.name)
            );
            if (!rel) {
              core.setFailed('Missing required label release/{major|minor|patch} on the PR.');
              return;
            }
            const bump = rel.name.split('/')[1]; // major | minor | patch
            core.setOutput('bump', bump);

      - name: Set up Git
        run: |
          git config user.name "Manuel GonÃ§alves"
          git config user.email "manuelmjgc@gmail.com"

      - name: Update Version
        id: update_version
        run: |
          git fetch
          git checkout main
          git pull
          echo "Bumping version with: ${{ steps.bump.outputs.bump }}"
          version=$(pnpm version ${{ steps.bump.outputs.bump }} --no-git-tag-version)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Update Changelog
        id: update_changelog
        run: |
          sed -i "/\[Unreleased\]/a ## [${{ steps.update_version.outputs.version }}]" CHANGELOG.md
          sed -i "/\[Unreleased\]/a\\" CHANGELOG.md

      - name: Create pull request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: sync/release-${{ steps.update_version.outputs.version }}
          title: "Sync Release: ${{ steps.update_version.outputs.version }}"
          body: "This pull request contains the updated package.json with the upcoming release version"
          base: develop
          sign-commits: true
          labels: kind/internal
