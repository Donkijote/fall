name: Sync Release

on:
  workflow_run:
    workflows: ["Release"]
    types: [completed]

permissions:
  actions: read
  contents: write
  pull-requests: read

jobs:
  sync:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download PR context from Release run
        id: dl_ctx
        uses: actions/download-artifact@v4
        with:
          name: pr-context
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
        continue-on-error: true

      - name: Verify PR context
        id: check_ctx
        run: |
          if [ ! -f "pr-context.json" ]; then
            echo "missing=true" >> "$GITHUB_OUTPUT"
            echo "No pr-context.json found. Will try to resolve PR via API as a fallback."
          else
            echo "missing=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Fallback — Find PR for workflow run commit
        if: steps.check_ctx.outputs.missing == 'true'
        id: find_pr
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.workflow_run.head_sha;
            const { owner, repo } = context.repo;

            const resp = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner, repo, commit_sha: sha
            });

            const pr = resp.data[0];
            if (!pr) {
              core.setFailed(`No PR found for commit ${sha}.`);
              return;
            }

            core.setOutput('number', pr.number.toString());
            core.setOutput('headRef', pr.head?.ref || '');
            core.setOutput('baseRef', pr.base?.ref || '');

      - name: Read PR context (artifact or fallback)
        id: pr_ctx
        run: |
          if [ -f pr-context.json ]; then
            echo "number=$(jq -r .number pr-context.json)" >> "$GITHUB_OUTPUT"
            echo "headRef=$(jq -r .headRef pr-context.json)" >> "$GITHUB_OUTPUT"
            echo "baseRef=$(jq -r .baseRef pr-context.json)" >> "$GITHUB_OUTPUT"
          else
            echo "number=${{ steps.find_pr.outputs.number }}" >> "$GITHUB_OUTPUT"
            echo "headRef=${{ steps.find_pr.outputs.headRef }}" >> "$GITHUB_OUTPUT"
            echo "baseRef=${{ steps.find_pr.outputs.baseRef }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Log PR info
        run: |
          echo "PR #:     ${{ steps.pr_ctx.outputs.number }}"
          echo "Head ref: ${{ steps.pr_ctx.outputs.headRef }}"
          echo "Base ref: ${{ steps.pr_ctx.outputs.baseRef }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.x

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Install
        run: pnpm install

      - name: Set up Git
        run: |
          git config user.name "Manuel Gonçalves"
          git config user.email "manuelmjgc@gmail.com"

      - name: Update Version
        id: update_version
        run: |
          git fetch
          git checkout main
          git pull
          echo "Bumping version with: ${{ steps.bump.outputs.bump }}"
          version=$(pnpm version ${{ steps.bump.outputs.bump }} --no-git-tag-version)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Update Changelog
        id: update_changelog
        run: |
          sed -i "/\[Unreleased\]/a ## [${{ steps.update_version.outputs.version }}]" CHANGELOG.md
          sed -i "/\[Unreleased\]/a\\" CHANGELOG.md

      - name: Create pull request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: sync/release-${{ steps.update_version.outputs.version }}
          title: "Sync Release: ${{ steps.update_version.outputs.version }}"
          body: "This pull request contains the updated package.json with the upcoming release version"
          base: develop
          sign-commits: true
          labels: kind/internal
